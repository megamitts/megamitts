pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

-- music by gruber

bunny = {
	radius = 30,
	originx = 64,
	originy = 64,
	angle = 0,
	}


poos = {}   -- poos array
	
farmer = {
    active = false,    -- whether farmer is currently visible
    timer = 0,         -- tracks how long farmer has been active
    bullets = {},      -- table to store active bullets
    spawn_time = 60,   -- time between farmer spawns (90 frames = 3 seconds) (change this to 30 and below to 240 )
    shoot_time = 160,   -- how long farmer shoots for (60 frames = 2 seconds)
    x = 0,            -- farmer x position (will be randomized)
    y = 0             -- farmer y position (will be randomized)
}

player = {
    x=64,
    y=64,
    facing_left=0,
    width = 16,
    height = 16,
    radius = 8,
    hit = 10,
    lives = 3,
    speed = 2,
    timer = 0,
    poop = 0
    }


carrot = {
    x = 0,
    y = 0,
    radius = 4,
    active = false,
    lifetime = 0,  -- track how long carrot has existed
    max_lifetime = 30 * 3  -- 30 fps * 3 seconds
}

parsnip = {
    x = 0,
    y = 0,
    radius = 4,
    active = false,
    lifetime = 0,  -- track how long carrot has existed
    max_lifetime = 30 * 3  -- 30 fps * 3 seconds
}

parsniptimer = 0
timer = 0
score = 0



function _init()
    music(0)
    intro()
    spawn_carrot()
    farmer.timer = 0
    farmer.active = false
    farmer.bullets = {}
end

function _update()
    if btn(⬅️) then 
        player.x-=player.speed 
        player.facing_left = 1 
        
    end
    if btn(➡️) then 
        player.x+=player.speed 
        player.facing_left = 0
        
         
    end
    if btn(⬇️) then player.y+=player.speed end
    if btn(⬆️) then player.y-=player.speed end
    
    if btn(❎) then 
        sfx(33) -- laser sound
        player.poop = 0
        player.timer = 0
        -- store the exact position where we want the poo to appear
        local poo_x = player.x
        if player.facing_left == 1 then
            poo_x = poo_x + 16  -- offset for facing left
        else
            poo_x = poo_x - 8   -- offset for facing right
        end
        
        add(poos, {
            x = poo_x,
            y = player.y + 8   -- store the final y position
        })
    end
    
    player.x = mid(0, player.x, 110) -- max x positions
    player.y = mid(0, player.y, 113)  -- max y positions

				-- check poop timer
					if player.timer == 30*5 then
						player.poop = 1
					end

				-- check if pooped
					if player.poop == 0 then
						player.speed = 2
					end
					if player.poop == 1 then
						player.speed = 1
					end
					if player.poop == 3 then
						player.speed = 5
					end


				-- carrot spawn timer
    if not carrot.active then
        timer += 1
        if timer >= 30*2 then -- 30 fps * 5 seconds
            spawn_carrot()
            timer = 0
        end
    else
        -- update carrot lifetime
        carrot.lifetime += 1
        if carrot.lifetime >= carrot.max_lifetime then
            carrot.active = false
            carrot.lifetime = 0
        end
    end

				-- collision check
    if carrot.active and check_collision() then
        carrot.active = false
        carrot.lifetime = 0
        score += 1
    end
    
    
    -- parsnip spawn parsniptimer
    if not parsnip.active then
        parsniptimer += 1
        if parsniptimer >= 30*20 then 
            spawn_parsnip()
            parsniptimer = 0
        end
    else
        -- update parsnip lifetime
        parsnip.lifetime += 1
        if parsnip.lifetime >= parsnip.max_lifetime then
            parsnip.active = false
            parsnip.lifetime = 0
        end
    end

				-- collision check
    if parsnip.active and check_parsnipcollision() then
        parsnip.active = false
        parsnip.lifetime = 0
        player.poop = 3
    end

	    -- farmer spawn/despawn logic
    if not farmer.active then
        -- count up until spawn time
        farmer.timer += 1
        if farmer.timer >= farmer.spawn_time then
            -- spawn farmer at random position
            -- keep farmer a bit away from edges (8 pixels)
            farmer.x = flr(rnd(80)) + 8
            farmer.y = flr(rnd(80)) + 8
            farmer.active = true
            farmer.timer = 0
        end
    else
        -- farmer is active
        farmer.timer += 1
        
        -- shoot bullets during active period
        if farmer.timer < farmer.shoot_time then
            -- create new bullet every 15 frames
            if farmer.timer % 10 == 0 then
                -- calculate direction towards player
                local dx = player.x - farmer.x
                local dy = player.y - farmer.y
                local len = sqrt(dx*dx + dy*dy)
                -- normalize direction vector
                dx /= len
                dy /= len
                
                -- add new bullet to table
                add(farmer.bullets, {
                    x = farmer.x,
                    y = farmer.y,
                    dx = dx * 2,  -- bullet speed = 2
                    dy = dy * 2
                })
            end
        elseif farmer.timer >= farmer.shoot_time then
            -- despawn farmer after shoot time
            farmer.active = false
            farmer.timer = 0
        end
    end
    
    -- update bullet positions
    for bullet in all(farmer.bullets) do
        bullet.x += bullet.dx
        bullet.y += bullet.dy
        
        -- check for collision with player
        local dist = sqrt((bullet.x-player.x)^2 + (bullet.y-player.y)^2)
        if dist < player.radius then
        player.hit -= 2
        deli(farmer.bullets,1)
            
        end
    end
    
    -- remove bullets that are off screen
    for i=#farmer.bullets,1,-1 do
        local b = farmer.bullets[i]
        if b.x < 0 or b.x > 127 or b.y < 0 or b.y > 127 then
            deli(farmer.bullets, i)
        end
    end



end

function _draw()
    
    cls(11)
    
    player.timer += 1
    
				draw_carrot()
				draw_parsnip()

				print("score: "..score, 2, 2, 0)

    draw_poos()
    
    draw_rabbit()
				
				
    
    draw_farmer()
    
    draw_bullets()
    
    rectfill(98,10,98+player.hit,12)
    
    check_hit()
       
   
				hearts()
				
    check_lives()
    
				check_score()
				
end



-->8
function restart()
				sfx(-1)
				bunny.angle = 0
				player.timer = 0
				player.poop = 0
				player.x = 64
				player.y = 64
				player.lives = 3
				timer = 0
				farmer.timer = 0
				score = 0
				farmer.active = false
				carrot.active = false
				parsnip.active = false
				player.hit = 10
				music(0)
				poos = {}
end

function hearts()

				rect(94, 1, 120, 15)		
		
				if player.lives == 3 then
				print("♥♥♥", 96,3,9)
				end
				
				if player.lives == 2 then
				print(" ♥♥", 96,3,9)
				end
				
				if player.lives == 1 then
				print("  ♥", 96,3,9)
				end

end

function check_lives()
	if player.lives == 0 then
    hit()
    repeat
  		flip()
				until btn(4)
    -- restart the game
    restart()
				end
end

function check_score()
	if score == 10 then
				game_over_win()
				repeat
  		flip()
				until btn(4)
				-- restart the game
				restart()
				end
end

function check_hit()
if player.hit == 2 then
    player.lives -=1
    player.hit = 10
    end
end

function draw_carrot()
-- draw carrot if active
    if carrot.active then
        spr(6, carrot.x, carrot.y)
				end
end

function draw_parsnip()
-- draw parsnip if active
    if parsnip.active then
        spr(7, parsnip.x, parsnip.y)
				end
end


function draw_poos()
-- draw all poos at their stored positions
    for poo in all(poos) do
        spr(5, poo.x, poo.y)
    end
end

function draw_rabbit()
-- draw the rabbit
    if player.facing_left == 1 then
        spr(1, player.x, player.y, 2, 2)
    else
        spr(1, player.x, player.y, 2, 2, true)    
    end
end

function draw_farmer()
-- draw farmer if active
    if farmer.active then
        spr(9,farmer.x, farmer.y, 4, 4)  -- red square
    				if farmer.timer < farmer.shoot_time then
            
            if farmer.timer % 15 == 0 then
    									sfx(34,3)  -- bullet sound
    								end
    				end
    end
end

function draw_bullets()
-- draw all bullets
    for bullet in all(farmer.bullets) do
        spr(0, bullet.x, bullet.y) -- use default sprite 0 as bullet.
								
    end
end    
 


function spawn_carrot()
	carrot.x = flr(rnd(120))+4
	carrot.y = flr(rnd(120))+4
	carrot.active = true
	carrot.lifetime = 0
end

function spawn_parsnip()
	parsnip.x = flr(rnd(120))+4
	parsnip.y = flr(rnd(120))+4
	parsnip.active = true
	parsnip.lifetime = 0
end

function check_collision()
    -- rabbit vs carrot collision
    local closest_x = mid(player.x, carrot.x, player.x + player.width)
    local closest_y = mid(player.y, carrot.y, player.y + player.height)
    
    local dist_x = carrot.x - closest_x
    local dist_y = carrot.y - closest_y
    
    return (dist_x * dist_x + dist_y * dist_y) <= (carrot.radius * carrot.radius)
end

function check_parsnipcollision()
    -- rabbit vs parsnip collision
    local closest_x = mid(player.x, parsnip.x, player.x + player.width)
    local closest_y = mid(player.y, parsnip.y, player.y + player.height)
    
    local dist_x = parsnip.x - closest_x
    local dist_y = parsnip.y - closest_y
    
    return (dist_x * dist_x + dist_y * dist_y) <= (parsnip.radius * parsnip.radius)
end
function hit()
	cls(9)
	print("the farmer killed you!", 20, 56, 0)
	spr(1, 56, 64, 2, 2, false, true)
	print("press 🅾️ to try again", 24, 96, 0)
	sfx(-1)
	music(-1, 300)
	
	
	-- remove the bullets
	for i=#farmer.bullets,1,-1 do
    deli(farmer.bullets, i)
	end
	sfx(36,1)
end

function game_over_win()
	cls(11)
	
	sfx(-1)
	music(-1, 300)
	
	

				for i=#farmer.bullets,1,-1 do
    deli(farmer.bullets, i)
				end   
	sfx(35,1)



while(bunny.angle < 360) do
 bunny.angle += 5
	cls(11)
	
 x=bunny.originx + bunny.radius * cos(bunny.angle/360)
 y=bunny.originy + bunny.radius * sin(bunny.angle/360)
 spr(1, x, y, 2, 2)
 flip()
 print("you have scoffed all the carrots!", 0, 56,0)
 
 print("press 🅾️ to restart", 20, 64, 0)
end



end	

function intro()
cls(3)
print("instructions", 40,0,0)
print("farmer smith's carrots are all", 2, 8,0)
print("crunchy and juicy and you are")
print("hungry after a night out with")
print("the bucks charming the does.")
print("eat 10 carrots to get your")
print("super bunny energy back.")
print("but watch out for farmer smith!")

print("bunnies need to poop every 5")
print("seconds or they slow down.")

print("press ❎ to poop", 30, 78, 0)
print("press 🅾️ to start", 28, 88,0)
print("ps: parsnips will cause zoomies!", 0, 100, 0)
print("pps: too much poop hides carrots!")
repeat
  flip()
until btn(4)
end

__gfx__
00000000000000000000000000000000000000000000000000033000000330000000000000000555550000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000033000000330000000000000005555555500000000000000000000000000000000000000000000
0070070000070700000000000000000000000000000000000033330000333300000000000005eeeeeee000000000000000000000000000000000000000000000
000770000077777000000000000000000000000000444400099999900ffffff0000000000005f1ffff1000000000000000000000000000000000000000000000
000770000077777000000000000000000000000000444400099999900ffffff0000000000005f1ffff1000000000000000000000000000000000000000000000
0070070007777770000000000000000000000000044444400099990000ffff0000000000000ef1ffff1000000000000000000000000000000000000000000000
0000000077777777770000000000000000000000444444440099990000ffff0000000000000ffffffef000000000000000000000000000000000000000000000
00000000777a77777770000000000000000000004444444400099000000ff000000000000000ffdddff000000000000000000000000000000000000000000000
00000000777a77777777ff000000000000000000000000000000000000000000000000000008cfdfdfc800000000000000000000000000000000000000000000
00000000777777777777ff000000000000000000000000000000000000000000000000000008c8fff8c800000000000000000000000000000000000000000000
0000000007777777777770000000000000000000000000000000000000000000000000000088c88888c880000000000000000000000000000000000000000000
0000000000077777777770000000000000000000000000000000000000000000000000000088a88888a880000000000000000000000000000000000000000000
00000000007777777777700000000000000000000000000000000000000000000000000000888ccccc8880000000000000000000000000000000000000000000
00000000007770007777000000000000000000000000000000000000000000000000000000888ccccc8880000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000888ccccc8880000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000888ccccc8880000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000088111a111880000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000881111111880000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000ff1111111ff0000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001110111000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000044440444400000000000000000000000000000000000000000000
__map__
0c0d0c0d0c0d0c0d0c0d0c0d0c0d0c0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1c1d1c1d1c1d1c1d1c1d1c1d1c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0d1d1c1d1c1d1c1d1c1d1c1d1c1c0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0d000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0d000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0d000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0d000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d000000000000000000000000001c00000c0d0c0d0c0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0c0d0c0d0c0d0c0d0c0d0c0d0c0d0c00001c1d1c1d1c1d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1c1d1c1d1c1d1c1d1c1d1c1d1c1d1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
480100010c17018705000000000023000000002300024000000000000025000000000000025000000002500025000250002500025000250002500025000250000000000000000000000000000000000000000000
050700000c06300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010102030000000000180701800500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
390101020000018050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410101020000018050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4b0800003062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0112000011a4505845058050ca250ea450000010a450584513a3511a4511a2510a3511a45058450583515a450000013a4513a2512a4513a25078450783516a350c82515a4515a2514a4515a250c8450ea2510a45
01120000189601dc141dd152171424e4521714245151dc1418960247153070121c1524e45265142471518960297152651522c151871424e4522c14245141896026515247141dc151ad1524e4520714217141dc15
0112000011a4505845098450ca250ea450000010a450584513a2511a4510a250ea450ca35188450c8450aa450a84516a4515a3513a4516a350ea45078450ca450c8450ba450ca350ea4510a250c8450ea2510a45
0112000011a4505845098450ca250ea450000010a450584513a2511a4510a350ea350ca45188350c8250aa450a84516a2515a4513a3516a451aa350c84515a45118450ca4509a3507a4505a25058451da1505845
00120000189601dc141dd152171424e4521714245151dc1418960247153070121c1524e45265142471518960297152651522c151871424e4522c141896029c15357011dc141dd151893024e45187141896021515
0112000016a450a8450a80511a2513a450500015a350a84518a2516a4516a3515a4516a350a8450a8351aa450500018a4518a2517a3518a450c8450c8351ba45000001aa451ba251fa351da451aa051fa3521a45
011200001896022c1422d152671424e452671422c1518e15189601d7152970126c1524e4529c1425e0518e25189601f51527c151d71424e4527c141d514189601dc152971422c151fd1524e45257142671424e25
0112000022a451aa351aa2519a351aa4500a0000a0021a4500a001fa451fa251ea351fa4500a0000a0020a4500a0018a3518a4517a3518a4500a0000a001fa4500a001da451ca251fa351da4500a0000a001fa45
01120000189600784522c1526d1424e4522c152d7010c8451896026d15185150c51524e452171522715189601184520d1420c1524d1424e4520c152b701189600a84524d15227151671524e450a8450c8450e845
011200001896022c1422d152671424e45267141d51518e1518960297153570126c1524e451fc142971518960227151f51527c151d71424e4527c141dc14189601f5151d71422c151fd1524e45257142671422c15
0112000016a450a8450e84511a3513a450500015a350a84518a2516a4515a3513a4511a351d825118450fa350f8451ba451aa2518a451ba3513a450c84511a451184510a4511a2513a4515a3511a4513a2515a35
0112000016a450a8450a80511a3513a450500015a250a84518a2516a4516a4515a3516a450a8450a8351aa450500018a4518a2517a3518a450c8450c8351ba45000001aa451aa3519a451aa251a00513a2515a35
011200001896022c1422d152671424e45267142951518e1518960297153570126c1524e451dc2525e0518e25189602b51527c151d71424e4527c1429c15189601d5152271422c151fd1524e45257142671418e25
011200001896016a3516a4515a3516a451f7152b7011ea351484516a3516a4515a3516a451e7152a7011da350a82516a3516a4515a3516a451d7152970115a4513a2515a4516a3517a4518a2516a4515a3513a45
011200000f8451fc150a8451893024e451fc1518e051ec1518960088450f8451ec1524e45038251251418e251896005845168451893024e451ac15168451896024e45078451893022c1524e450c8450e84510845
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0110000018000180011a0001c0001d0001f000210001f0001d0001c0001a0001c0001d0001d0011d0021a0001c0001d0001f0001f00021000210001f0001d0001c0001c0001a0001a0001a000180001800018000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0112000016045168450a84511045130450a845150450a83518045160451604515045160450984515045130451204513045150451604502805150451304512045000000e045100451204512845180451604515045
011200001896022c1422d152671424e45267142951522c1418960297153570126c1524e452b51429715189600e84522d151ac140284524e451a7151871518960225151ac142650122d1524e450e8450284522c05
001b00040237005370073700337000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000
001000000527006250272000020000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000020000000
000a0000296501765000600006000060001600186001660014600126001160010600106000f6000e6000d6000c6000b6000a60009600086000860008600076000760006600056000560013000000000000000000
00080000357502e75029750267502475022750217501f7501e7501c7501b7501a7501a75019750187501875017750167501675015750157501575016750167501775017750187501a7501c7501f7502475036750
001300000c7500c7500b7500b7500b7500b7500b7500b7500b7500a7500a7500a7500a7500b7500b7500b7500b7500b7500b7500c7500c7500a7500c7500c7500c7500c7500d7500d7500d7500d7500d7500d750
__music__
01 08094344
00 0a094344
00 08094344
00 0b0c4344
00 13144344
00 12114344
00 0d0e4344
00 0f104344
02 15164344

